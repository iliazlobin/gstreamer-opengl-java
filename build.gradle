buildscript {
  repositories {
    mavenCentral()
    maven { url = "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath("gradle.plugin.com.dorongold.plugins:task-tree:1.3")
  }
}

apply {
  plugin("com.dorongold.task-tree")
  plugin("java")
}

sourceCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

repositories {
  mavenCentral()
  maven { url = "http://maven.cuchazinteractive.com" }
}

dependencies {
  // gstreamer
  compile "org.freedesktop.gstreamer:gst1-java-core:0.9.2"

  // jfxgl
  compile("cuchaz:jfxgl:${jfxglVersion}")
  compile("cuchaz:jfxgl-jfxrt:${jfxglVersion}")

  // lwjgl
  compile("org.lwjgl:lwjgl:${lwjglVersion}")
  compile("org.lwjgl:lwjgl-glfw:${lwjglVersion}")
  compile("org.lwjgl:lwjgl-opengl:${lwjglVersion}")

  // natives
  compile group: "org.lwjgl", name: "lwjgl", version: "${lwjglVersion}", classifier: "natives-linux"
  compile group: "org.lwjgl", name: "lwjgl-opengl", version: "${lwjglVersion}", classifier: "natives-linux"
  compile group: "org.lwjgl", name: "lwjgl-glfw", version: "${lwjglVersion}", classifier: "natives-linux"
  compile group: "org.lwjgl", name: "lwjgl-stb", version: "${lwjglVersion}", classifier: "natives-linux"
  compile group: "org.lwjgl", name: "lwjgl-bgfx", version: "${lwjglVersion}", classifier: "natives-linux"
  compile group: "org.lwjgl", name: "lwjgl-bgfx", version: "${lwjglVersion}", classifier: "natives-linux"
  compile group: "org.lwjgl", name: "lwjgl-assimp", version: "${lwjglVersion}", classifier: "natives-linux"

  // joml
  compile group: "org.joml", name: "joml", version: "1.9.9"

  // humble-video
  compile("io.humble:humble-video-all:0.2.1") {
    exclude module: "humble-video-arch-i686-pc-linux-gnu6"
  }

  // test
  testCompile("org.junit.jupiter:junit-jupiter-api")
  testRuntime("org.junit.jupiter:junit-jupiter-engine")
}

configurations.all {
  resolutionStrategy {
    cacheDynamicVersionsFor 0, 'seconds'
    cacheChangingModulesFor 0, 'seconds'
  }
}

compileJava {
  options.compilerArgs += ["-Xlint:unchecked"]
}

task art() {
  println("${project.group}:${project.name}:${project.version}")
}

taskTree {
  noRepeat = true
  impliesSubProjects = true
}
